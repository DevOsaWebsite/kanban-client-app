name: 'Check CI'

on: push

jobs:
  linters:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Cache .npm directory
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install Node.js dependencies
        run: npm ci --cache .npm --prefer-offline
      - name: Linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          prettier: true
          auto_fix: false
          commit_message: 'style: code style issues with ${linter}'
          eslint_extensions: ts
          github_token: ${{ secrets.GITHUB_TOKEN }}
  unit-tests:
    needs: [linters]
    strategy:
      matrix:
        node-version: [22.x]
        os: [ubuntu-latest]
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Node.js dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Run Unit Tests
        run: npm run test
        env:
          NODE_ENV: test
      - name: Coverage
        run: npm run coverage
        env:
          NODE_ENV: test
  build:
    needs: [unit-tests]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
        os: [ubuntu-latest]
    name: Build Production
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js  ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Node.js dependencies
        run: npm ci --cache .npm --prefer-offline

      - name: Build Production
        run: npm run build
        env:
          NODE_ENV: production
